// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // phone        String  @unique
  // password     String
  name       String?
  profile    String?
  facebookId String? @unique

  refreshToken String?

  forms   Form[]
  rewards Reward[]

  @@map("users")
}

model Form {
  id        Int      @id @default(autoincrement())
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type     String
  validity DateTime
  style    Json
  metaData Json

  questions Question[]
  responses Response[]

  reward Reward? @relation(fields: [rewardId], references: [id])

  rewardId Int?      @unique
  User     User?     @relation(fields: [userId], references: [id])
  userId   Int?
  Answers  Answers[]

  @@map("forms")
}

model Question {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  question String
  type     String
  content  Json

  answers Answers[]

  Form   Form? @relation(fields: [formId], references: [id])
  formId Int?

  @@map("questions")
}

model Reward {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name    String
  type    String
  content Json

  validity DateTime
  count    Int      @default(0)

  style Json

  Form        Form?
  User        User?        @relation(fields: [userId], references: [id])
  userId      Int?
  redemptions Redemption[]

  @@map("rewards")
}

model Response {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name   String
  number String

  totalScore Int

  answers Answers[]
  meta    Json

  Form   Form? @relation(fields: [formId], references: [id])
  formId Int?

  @@map("responses")
}

model Answers {
  id Int @id @default(autoincrement())

  answer String
  score  String?
  meta   Json?

  Question   Question? @relation(fields: [questionId], references: [id])
  questionId Int

  Response   Response? @relation(fields: [responseId], references: [id])
  responseId Int?

  Form   Form? @relation(fields: [formId], references: [id])
  formId Int?

  @@map("answers")
}

model Redemption {
  id   Int    @id @default(autoincrement())
  code String @unique

  rewardId Int

  isPublished Boolean
  isProcessed Boolean

  reward Reward? @relation(fields: [rewardId], references: [id])

  @@map("redemptions")
}
